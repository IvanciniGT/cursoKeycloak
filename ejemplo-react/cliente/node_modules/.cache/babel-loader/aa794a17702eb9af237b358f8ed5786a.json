{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/environment/keycloak-react-example/client/src/KeycloakLogin.js\";\nimport React, { Component } from 'react';\nimport Keycloak from \"keycloak-js\";\nimport decode from 'jwt-decode';\nimport JSONPretty from 'react-json-pretty';\nconst Config = {\n  url: 'https://3.253.29.47:8443',\n  realm: 'prueba',\n  clientId: 'react',\n  onLoad: 'login-required'\n};\n\nclass KeycloakLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keycloak: null,\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    const keycloak = Keycloak(Config);\n    keycloak.init({\n      onLoad: \"login-required\",\n      promiseType: 'native'\n    }).then(authenticated => {\n      this.setState({\n        keycloak: keycloak,\n        authenticated: authenticated\n      });\n    });\n  }\n\n  render() {\n    if (this.state.keycloak && this.state.authenticated) {\n      var jwt = JSON.stringify(decode(this.state.keycloak.token));\n      return React.createElement(JSONPretty, {\n        id: \"json-pretty\",\n        data: jwt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Ready to initialize\");\n    }\n  }\n\n}\n\nexport default KeycloakLogin;","map":{"version":3,"sources":["/home/ubuntu/environment/keycloak-react-example/client/src/KeycloakLogin.js"],"names":["React","Component","Keycloak","decode","JSONPretty","Config","url","realm","clientId","onLoad","KeycloakLogin","constructor","props","state","keycloak","authenticated","componentDidMount","init","promiseType","then","setState","render","jwt","JSON","stringify","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE,0BADM;AAEXC,EAAAA,KAAK,EAAE,QAFI;AAGXC,EAAAA,QAAQ,EAAE,OAHC;AAIXC,EAAAA,MAAM,EAAE;AAJG,CAAf;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAElCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,aAAa,EAAE;AAAjC,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMF,QAAQ,GAAGZ,QAAQ,CAACG,MAAD,CAAzB;AACAS,IAAAA,QAAQ,CAACG,IAAT,CAAc;AAAER,MAAAA,MAAM,EAAE,gBAAV;AAA4BS,MAAAA,WAAW,EAAE;AAAzC,KAAd,EAAmEC,IAAnE,CAAwEJ,aAAa,IAAI;AACrF,WAAKK,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,aAAa,EAAEA;AAArC,OAAd;AACH,KAFD;AAGH;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKR,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,aAAtC,EAAqD;AACjD,UAAIO,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAerB,MAAM,CAAC,KAAKU,KAAL,CAAWC,QAAX,CAAoBW,KAArB,CAArB,CAAV;AACA,aAAO,oBAAC,UAAD;AAAY,QAAA,EAAE,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAEH,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHD,MAGO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;AACJ;;AArBiC;;AAyBtC,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Keycloak from \"keycloak-js\"\nimport decode from 'jwt-decode'\nimport JSONPretty from 'react-json-pretty'\n\nconst Config = {\n    url: 'https://3.253.29.47:8443',\n    realm: 'prueba',\n    clientId: 'react',\n    onLoad: 'login-required'\n}\n\nclass KeycloakLogin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { keycloak: null, authenticated: false };\n    }\n\n    componentDidMount() {\n        const keycloak = Keycloak(Config);\n        keycloak.init({ onLoad: \"login-required\", promiseType: 'native' }).then(authenticated => {\n            this.setState({ keycloak: keycloak, authenticated: authenticated })\n        });\n    }\n\n    render() {\n        if (this.state.keycloak && this.state.authenticated) {\n            var jwt = JSON.stringify(decode(this.state.keycloak.token));\n            return <JSONPretty id=\"json-pretty\" data={jwt}></JSONPretty>\n        } else {\n            return <div>Ready to initialize</div>\n        }\n    }\n\n}\n\nexport default KeycloakLogin"]},"metadata":{},"sourceType":"module"}